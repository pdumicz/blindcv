{"version":3,"file":"96ed53ff4b854a3744df.js","sources":["webpack://pdf/../../../packages/components/ui/pdf/pdfViewer/v1.0.0/pdfViewer.tsx"],"sourcesContent":["import { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { Document, Page, pdfjs } from 'react-pdf';\nimport styled from '@emotion/styled'\nimport type { Props } from './types';\nimport { getCompProps } from \"@packages/get-comp-props\"\nimport { sendOutput } from '@packages/port-send';\nimport isEmpty from '@packages/is-empty';\nimport React from 'react';\n\npdfjs.GlobalWorkerOptions.workerSrc = new URL(\n    'pdfjs-dist/build/pdf.worker.min.js',\n    import.meta.url,\n).toString();\n\nexport default forwardRef(function (props: Props, ref) {\n    const p = { ...getCompProps(props) } as Props\n\n    const { noodlNode, sourceUrl } = p\n\n    const [totalPages, setNumPages] = useState(null)\n    useEffect(() => { if (totalPages !== null) sendOutput(noodlNode, 'totalPages', totalPages) }, [totalPages])\n\n    const [currentPage, setCurrentPage] = useState(1)\n    useEffect(() => sendOutput(noodlNode, 'currentPage', currentPage), [currentPage])\n    useEffect(() => { if (!isEmpty(p.currentPage)) setCurrentPage(p.currentPage || 1) }, [p.currentPage])\n\n    const onDocumentLoad = (d: any) => setNumPages(d.numPages)\n\n    useImperativeHandle(ref, () => ({\n        nextPage() { setCurrentPage((prev) => prev === totalPages ? prev : prev + 1) },\n        previousPage() { setCurrentPage((prev) => prev === 1 ? prev : prev - 1) },\n    }), [totalPages])\n\n    const DocumentWrapper = styled.div`\n        flex: 1;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        }`\n\n    return <DocumentWrapper>\n        <Document\n            key={sourceUrl}\n            file={sourceUrl}\n            loading='Loading...'\n            noData='No data'\n            onLoadSuccess={onDocumentLoad}\n        >\n            <Page\n                key={currentPage}\n                pageNumber={currentPage}\n                renderTextLayer={false}\n                renderAnnotationLayer={false}\n                width={p.pdfViewerWidth}\n                height={p.pdfViewerHeight}\n                loading='Loading...'\n                noData='No page data'\n            />\n        </Document>\n    </DocumentWrapper>\n})\n"],"names":["URL","toString","forwardRef","props","ref","p","noodlNode","sourceUrl","useState","totalPages","setNumPages","useEffect","currentPage","setCurrentPage","useImperativeHandle","nextPage","prev","previousPage","DocumentWrapper","key","file","loading","noData","onLoadSuccess","d","numPages","pageNumber","renderTextLayer","renderAnnotationLayer","width","pdfViewerWidth","height","pdfViewerHeight"],"mappings":"o6CASA,iCAAmC,CAAG,IAAIA,IACtC,aACe,EACjBC,QAAQ,GAEV,UAAe,KAAAC,UAAA,EAAW,SAAUC,CAAY,CAAEC,CAAG,EACjD,IAAMC,EAAI,A,6aAAA,GAAK,QAAaF,IAEpBG,EAAyBD,EAAzBC,SAAS,CAAEC,EAAcF,EAAdE,SAAS,CAEM,SAAAC,QAAA,EAAS,SAApCC,EAA2B,KAAfC,EAAe,KAClC,KAAAC,SAAA,EAAU,WAA2B,OAAfF,GAAqB,SAAWH,EAAW,aAAcG,EAAY,EAAG,CAACA,EAAW,EAE1G,IAAsC,SAAAD,QAAA,EAAS,MAAxCI,EAA+B,KAAlBC,EAAkB,KACtC,KAAAF,SAAA,EAAU,W,MAAM,SAAWL,EAAW,cAAeM,E,EAAc,CAACA,EAAY,EAChF,KAAAD,SAAA,EAAU,WAAY,CAAC,QAAQN,EAAEO,WAAW,GAAGC,EAAeR,EAAEO,WAAW,EAAI,EAAG,EAAG,CAACP,EAAEO,WAAW,CAAC,EAIpG,KAAAE,mBAAA,EAAoBV,EAAK,W,MAAO,CAC5BW,SAAA,WAAaF,EAAe,SAACG,CAAI,E,OAAKA,IAASP,EAAaO,EAAOA,EAAO,C,EAAG,EAC7EC,aAAA,WAAiBJ,EAAe,SAACG,CAAI,E,OAAKA,AAAS,IAATA,EAAaA,EAAOA,EAAO,C,EAAG,CAC5E,C,EAAI,CAACP,EAAW,EAEhB,IAAMS,EAAkB,OAAU,MAOlC,OAAO,kBAACA,EAAA,KACJ,kBAAC,IAAQ,CACLC,IAAKZ,EACLa,KAAMb,EACNc,QAAQ,aACRC,OAAO,UACPC,cApBe,SAACC,CAAC,E,OAAUd,EAAYc,EAAEC,QAAQ,C,GAsBjD,kBAAC,IAAI,CACDN,IAAKP,EACLc,WAAYd,EACZe,gBAAiB,GACjBC,sBAAuB,GACvBC,MAAOxB,EAAEyB,cAAc,CACvBC,OAAQ1B,EAAE2B,eAAe,CACzBX,QAAQ,aACRC,OAAO,c,IAIvB,E"}